# import
======================================================================
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# successful cases
======================================================================
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 7)
[[0.14, 0.29, 0.43], [0.57, 0.71, 0.86], [1.0, 1.14, 1.29]]
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 5.5)
[[0.18, 0.36, 0.55], [0.73, 0.91, 1.09]]

# TypeError
======================================================================
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix = [[1, 2, 3], [4, 5, 'a']]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [1, 2, 3]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix_divided(2, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 'H')
Traceback (most recent call last):
...
TypeError: div must be a number
